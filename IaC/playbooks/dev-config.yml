# Ansible file can be played manually from inside the VM:
# vagrant@myUbuntu:/vagrant/playbooks$ ansible-playbook dev-config.yml -i localhost, -c local

---
- hosts: all
  become: true
  vars:
    db_user: myuser
    db_password: MySecretPassword123
    db_name: myproject_db

  tasks:

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install curl
      apt:
        name: curl
        state: present

    - name: Install Net Tools
      apt:
        name: net-tools
        state: present

# Install Node.JS 20.x (= latest version of this major version)
# Will be installed from Nodes's repo' instead of ubuntu apt repo (ubuntu store may be outdated)
    - name: Install Node.js 20.x
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
        apt install -y nodejs

# Install Postgres 15 from Postgres repo
# Same comment as above
    - name: Add PostgreSQL signing key
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Add PostgreSQL APT repository
      apt_repository:
        repo: 'deb http://apt.postgresql.org/pub/repos/apt jammy-pgdg main'
        state: present
        filename: 'pgdg'

    - name: Install PostgreSQL 15
      apt:
        name: postgresql-15
        state: present

# Creating a Postgres user with an SQL command
    - name: Manually create PostgreSQL user (shell workaround)
      become: true
      shell: |
        sudo -u postgres psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='{{ db_user }}'" | grep -q 1 || \
        sudo -u postgres psql -c "CREATE USER {{ db_user }} WITH PASSWORD '{{ db_password }}';"

# Creating a Postgres database with an SQL command
    - name: Manually create PostgreSQL database (if it doesn't exist)
      become: true
      shell: |
        sudo -u postgres psql -tAc "SELECT 1 FROM pg_database WHERE datname='{{ db_name }}'" | grep -q 1 || \
        sudo -u postgres psql -c "CREATE DATABASE {{ db_name }} OWNER {{ db_user }};"

